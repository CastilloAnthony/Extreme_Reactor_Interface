local fileDir = '/er_interface/'
local webLinkPrefix = 'https://raw.githubusercontent.com/CastilloAnthony/Extreme_Reactor_Interface/refs/heads/main/'
local localUpdater, webUpdater = nil, nil
shell.run('wget '..webLinkPrefix..'updater '..fileDir..'tempUpdater')
local file = fs.open(fileDir..'updater', 'r')
localUpdater = file.readAll()
file.close()
local file = fs.open(fileDir..'tempUpdater', 'r')
webUpdater = file.readAll()
file.close()
if localUpdater ~= webUpdater then
  shell.run('rm '..fileDir..'updater')
  shell.run('mv '..fileDir..'tempUpdater '..fileDir..'updater')
  shell.run(fileDir..'updater')
else
  shell.run('rm '..fileDir..'tempUpdater')
  local files = {
    -- {['fileName'] = 'updater', ['webLink'] = 'er_interface/updater'},
    -- {['fileName'] = 'README.md', ['webLink'] = 'er_interface/README.md'},
    {['fileName'] = 'er_interface.lua', ['webLink'] = 'er_interface/er_interface.lua'},
    {['fileName'] = 'cryptography.lua', ['webLink'] = 'er_interface/cryptography.lua'},
    {['fileName'] = 'gui.lua', ['webLink'] = 'er_interface/gui.lua'},

    -- Help Documents
    {['fileName'] = 'docs/help/default.txt', ['webLink'] = 'er_interface/docs/help/default.txt'},
    {['fileName'] = 'docs/help/Automations.txt', ['webLink'] = 'er_interface/docs/help/Automations.txt'},
    {['fileName'] = 'docs/help/connectionInfo.txt', ['webLink'] = 'er_interface/docs/help/connectionInfo.txt'},
    {['fileName'] = 'docs/help/rodStatisticsInfo.txt', ['webLink'] = 'er_interface/docs/help/rodStatisticsInfo.txt'},
    {['fileName'] = 'docs/help/Histograms.txt', ['webLink'] = 'er_interface/docs/help/Histograms.txt'},
    {['fileName'] = 'docs/help/manageClients.txt', ['webLink'] = 'er_interface/docs/help/manageClients.txt'},
  }
  shell.run('wget '..webLinkPrefix..'README.md '..fileDir..'README.md')
  for k, v in pairs(files) do
    if fs.exists(fileDir..v['fileName']) then
      shell.run('rm '..fileDir..v['fileName'])
    end
    shell.run('wget '..webLinkPrefix..v['webLink']..' '..fileDir..v['fileName'])
  end

  if fs.exists(fileDir..'interface.lua') then
    shell.run('rm '..fileDir..'interface.lua')
    shell.run('wget '..webLinkPrefix..'interface.lua '..fileDir..'interface.lua')
    if fs.exists(fileDir..'settings_automations.cfg') then
      shell.run('rm '..fileDir..'settings_automations.cfg')
    end
  elseif fs.exists(fileDir..'remote.lua') then
    shell.run('rm '..fileDir..'remote.lua')
    shell.run('wget '..webLinkPrefix..'remote.lua '..fileDir..'remote.lua')
  else
    term.write('Is this device a')
    term.scroll(1)
    _, y = term.getSize()
    term.setCursorPos(1,y)
    term.write('server? (y/n) ')
    userInput = read()
    if userInput == 'y' then
      shell.run('wget '..webLinkPrefix..'er_interface/interface.lua '..fileDir..'interface.lua')
      if fs.exists(fileDir..'settings_automations.cfg') then
        shell.run('rm '..fileDir..'settings_automations.cfg')
      end
    else
      shell.run('wget '..webLinkPrefix..'er_interface/remote.lua '..fileDir..'remote.lua')
    end
  end
  if fs.exists(fileDir..'settings.cfg') then
    shell.run('rm '..fileDir..'settings.cfg')
  end
  if fs.exists('/startup') then
    shell.run('rm /startup')
  end
  shell.run('wget '..webLinkPrefix..'startup /startup')
  shell.run('reboot')
end